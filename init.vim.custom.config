
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 用户自定义配置（该文件放一般性配置，可覆盖 init.vim 里的配置，若要增加、卸载插件，请放入 init.vim.custom.plugins）
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 开启相对行号
" set relativenumber  

" 开启鼠标
set mouse=a

" 设置光标所在列高亮
" set cursorcolumn

" indentLine 开启代码对齐线
" let g:indentLine_enabled = 1

" markdown
" let system = system('uname -s')
" if system == "Darwin\n"
"     let g:mkdp_path_to_chrome = "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome"
" else
"     let g:mkdp_path_to_chrome = '/usr/bin/google-chrome-stable %U'
" endif
" nmap <silent> <F7> <Plug>MarkdownPreview
" imap <silent> <F7> <Plug>MarkdownPreview
" nmap <silent> <F8> <Plug>StopMarkdownPreview
" imap <silent> <F8> <Plug>StopMarkdownPreview

" Doxygen
" let g:DoxygenToolkit_authorName="chxuan, 787280310@qq.com"
" let s:licenseTag = "Copyright(C)\<enter>"
" let s:licenseTag = s:licenseTag . "For free\<enter>"
" let s:licenseTag = s:licenseTag . "All right reserved\<enter>"
" let g:DoxygenToolkit_licenseTag = s:licenseTag
" let g:DoxygenToolkit_briefTag_funcName="yes"
" let g:doxygen_enhanced_color=1
" let g:DoxygenToolkit_commentType="Qt"

" Asyncrun configs
" nnoremap <F5> :call CompileRunGcc()<cr>
" Run or Debug or Profile-Code python code
"
" Debug:
" pip install pudb
" from pudb import set_trace
" set_trace()
"
" Profile-Code:
" pip install line_profiler
" @profile
" main()
"func! CompileRunGcc()
"    exec "w"
"    if &filetype == 'python'
"        if search("@profile")
"            exec "AsyncRun kernprof -l -v %"
"            exec "copen"
"            exec "wincmd p"
"        elseif search("set_trace()")
"            exec "!python %"
"        else
"            exec "AsyncRun -raw python %"
"            exec "copen"
"            exec "wincmd p"
"        endif
"    endif
"endfunc

" 重新加载vimrc文件
nnoremap <leader>s :source $MYVIMRC<cr>
" FloatTerm
nnoremap   <silent> <leader>tt   :FloatermToggle<CR>
tnoremap   <silent> <leader>tt   <C-\><C-n>:FloatermToggle<CR>
" In insert mode, move normally by using Ctrl
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
" ListToggle
let g:lt_location_list_toggle_map = '<leader>ll'
let g:lt_quickfix_list_toggle_map = '<leader>ql'
nnoremap <silent> <leader>ov :Vista coc<CR>
nnoremap <silent> <leader>cv :Vista!<CR>
nnoremap <silent>  <UP> :resize +5<CR>
nnoremap <silent>  <DOWN> :resize -5<CR>
nnoremap <silent>  <LEFT> :vertical resize -5<CR>
nnoremap <silent>  <RIGHT> :vertical resize +5<CR>
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif
" Fugitive Conflict Resolution
nnoremap <leader>gd :Gvdiffsplit!<CR>
nnoremap gdh :diffget //2<CR>
nnoremap gdl :diffget //3<CR>

" vv settings
if exists('g:vv')
  VVset windowheight=100%
  VVset windowwidth=100%
  VVset windowleft=0
  VVset windowtop=0
  VVset fontfamily=DroidSansMono\ Nerd\ Font
  VVset fontsize=18
endif


let g:airline#extensions#tabline#show_buffers=1
let g:airline#extensions#tabline#show_splits=0
let g:airline#extensions#tabline#show_tabs=0
let g:airline#extensions#tabline#show_tab_count=0
let g:airline#extensions#tabline#show_close_button=0

nmap <leader>dd :call vimspector#Launch()<CR>
nmap <leader>dx :VimspectorReset<CR>
nmap <leader>de :VimspectorEval
nmap <leader>dw :VimspectorWatch
nmap <leader>do :VimspectorShowOutput
nmap <leader>dbp <Plug>VimspectorToggleBreakpoint
nmap <leader>dl <Plug>VimspectorStepInto
nmap <leader>dj <Plug>VimspectorStepOver
nmap <leader>dk <Plug>VimspectorStepOut
nnoremap <leader>d<space> :call vimspector#Continue()<CR>
nmap <leader>drc <Plug>VimspectorRunToCursor
nmap <Leader>di <Plug>VimspectorBalloonEval
xmap <Leader>di <Plug>VimspectorBalloonEval
let g:vimspector_install_gadgets = [ 'debugpy', 'vscode-go', 'CodeLLDB', 'vscode-node-debug2' ]

" vim: set filetype=vim:
